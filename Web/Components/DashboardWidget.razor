@using Microsoft.AspNetCore.Components

<MudPaper Class="pa-4 ma-2 dashboard-widget" Style="@GetPaperStyle()" title="@Tooltip" Elevation="2">
    <div class="d-flex align-center">
        <div class="icon-bg mr-4">
            <MudIcon Icon="@Icon" Size="Size.Large" />
        </div>
        <div class="flex-grow-1">
            <MudText Typo="Typo.subtitle2" Class="mb-1">@Title</MudText>
            <MudText Typo="Typo.h6" Class="font-weight-bold">@Value</MudText>
        </div>
    </div>
</MudPaper>

<style>
.dashboard-widget {
    border-radius: 18px; /* Cantos arredondados */
    overflow: hidden;
}
.icon-bg {
    width: 56px;
    height: 56px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    background: rgba(255,255,255,0.18) url('/images/icone-bg.svg') center/cover no-repeat; /* Substitua pelo caminho da imagem desejada */
    box-shadow: 0 2px 8px rgba(0,0,0,0.08);
}
</style>

@code {
    [Parameter] public required string Title { get; set; }
    [Parameter] public required string Value { get; set; }
    [Parameter] public required string Icon { get; set; }
    [Parameter] public required string Tooltip { get; set; }
    [Parameter] public required MudBlazor.Color Color { get; set; } = MudBlazor.Color.Primary;

    private string GetPaperStyle()
    {
        var colorMap = new Dictionary<MudBlazor.Color, string>
        {
            { MudBlazor.Color.Primary, "background: linear-gradient(45deg, var(--mud-palette-primary), var(--mud-palette-primary-lighten)); color: white;" },
            { MudBlazor.Color.Secondary, "background: linear-gradient(45deg, var(--mud-palette-secondary), var(--mud-palette-secondary-lighten)); color: white;" },
            { MudBlazor.Color.Success, "background: linear-gradient(45deg, var(--mud-palette-success), var(--mud-palette-success-lighten)); color: white;" },
            { MudBlazor.Color.Info, "background: linear-gradient(45deg, var(--mud-palette-info), var(--mud-palette-info-lighten)); color: white;" },
            { MudBlazor.Color.Warning, "background: linear-gradient(45deg, var(--mud-palette-warning), var(--mud-palette-warning-lighten)); color: white;" },
            { MudBlazor.Color.Error, "background: linear-gradient(45deg, var(--mud-palette-error), var(--mud-palette-error-lighten)); color: white;" }
        };

        return colorMap.ContainsKey(Color) 
            ? colorMap[Color] + " color: white;" 
            : "background: linear-gradient(45deg, var(--mud-palette-primary), var(--mud-palette-primary-lighten)); color: white;";
    }
}